package rokefeli.ui;

import java.awt.FlowLayout;
import java.awt.GridLayout;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import rokefeli.logic.GestorInventario;
import rokefeli.model.LoteMielCosecha;
import rokefeli.model.ProductoFinal;

public class InterfazRokefeli extends javax.swing.JFrame {

    GestorInventario gestor = new GestorInventario();
    
    public InterfazRokefeli() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btnBusqueda = new javax.swing.JButton();
        btnMostrarTotales = new javax.swing.JButton();
        btnIngresarMateriaPrima = new javax.swing.JButton();
        btnTransformar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaResultadosMateriaPrima = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 601, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 483, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Insumos", jPanel2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 601, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 483, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Productos Finales", jPanel3);

        btnBusqueda.setText("Búsqueda");
        btnBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBusquedaActionPerformed(evt);
            }
        });

        btnMostrarTotales.setText("Mostrar Totales");
        btnMostrarTotales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarTotalesActionPerformed(evt);
            }
        });

        btnIngresarMateriaPrima.setText("Ingresar Materia Prima");
        btnIngresarMateriaPrima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarMateriaPrimaActionPerformed(evt);
            }
        });

        btnTransformar.setText("Transformar");
        btnTransformar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransformarActionPerformed(evt);
            }
        });

        txtaResultadosMateriaPrima.setColumns(20);
        txtaResultadosMateriaPrima.setRows(5);
        jScrollPane1.setViewportView(txtaResultadosMateriaPrima);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(btnMostrarTotales))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBusqueda, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnTransformar, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap(46, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnIngresarMateriaPrima)
                .addGap(18, 18, 18))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(btnIngresarMateriaPrima)
                .addGap(32, 32, 32)
                .addComponent(btnMostrarTotales)
                .addGap(29, 29, 29)
                .addComponent(btnBusqueda)
                .addGap(40, 40, 40)
                .addComponent(btnTransformar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(128, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Materia Prima", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIngresarMateriaPrimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarMateriaPrimaActionPerformed
        DatosLoteMiel dialog = new DatosLoteMiel(this);
        dialog.setVisible(true);
        
        LoteMielCosecha nuevoLote = dialog.getLoteMielCosecha();
        
        if(nuevoLote != null){
            gestor.inventarioLotes.add(nuevoLote);
        } else{
            JOptionPane.showMessageDialog(rootPane, "Ingreso de Lote de Miel cancelado.");
        }
        
    }//GEN-LAST:event_btnIngresarMateriaPrimaActionPerformed

    private void btnMostrarTotalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarTotalesActionPerformed
        String mostrarLotes = """
                              MOSTRANDO TODOS LOS LOTES:
                              ID LOTE - FLORACION - ORIGEN - FECHA INGRESO - CANTIDAD (KG) - ESTADO\n
                              """;
        for(LoteMielCosecha lote : gestor.inventarioLotes){
            mostrarLotes += lote.getIdLote()+" - "+lote.getFloracion()+" - "+lote.getOrigen()+" - "+lote.getFechaCompra()+" - "+lote.getCantKg()+" - "+lote.getEstado()+"\n";
        }
        txtaResultadosMateriaPrima.setText(mostrarLotes);
    }//GEN-LAST:event_btnMostrarTotalesActionPerformed

    private void btnBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBusquedaActionPerformed
 String criterio = JOptionPane.showInputDialog(this, "Ingrese ID del Lote o Floración para buscar:");
        if (criterio == null || criterio.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Búsqueda cancelada o entrada vacía.");
            return;
        }

        StringBuilder resultados = new StringBuilder("""
            RESULTADOS DE BÚSQUEDA:
            ID LOTE - FLORACION - ORIGEN - FECHA INGRESO - CANTIDAD (KG) - ESTADO\n
            """);
        boolean encontrado = false;

        for (LoteMielCosecha lote : gestor.inventarioLotes) {
            if (lote.getIdLote().equalsIgnoreCase(criterio) || lote.getFloracion().toLowerCase().contains(criterio.toLowerCase())) {
                resultados.append(lote.getIdLote()).append(" - ")
                         .append(lote.getFloracion()).append(" - ")
                         .append(lote.getOrigen()).append(" - ")
                         .append(lote.getFechaCompra()).append(" - ")
                         .append(lote.getCantKg()).append(" - ")
                         .append(lote.getEstado()).append("\n");
                encontrado = true;
            }
        }

        if (!encontrado) {
            resultados.append("No se encontraron lotes que coincidan con el criterio.");
        }

        txtaResultadosMateriaPrima.setText(resultados.toString());
    }//GEN-LAST:event_btnBusquedaActionPerformed

    private void btnTransformarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransformarActionPerformed
    String idLote = JOptionPane.showInputDialog(this, "Ingrese el ID del Lote a transformar:");
        if (idLote == null || idLote.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Transformación cancelada o ID vacío.");
            return;
        }

        LoteMielCosecha loteSeleccionado = null;
        for (LoteMielCosecha lote : gestor.inventarioLotes) {
            if (lote.getIdLote().equalsIgnoreCase(idLote)) {
                loteSeleccionado = lote;
                break;
            }
        }

        if (loteSeleccionado == null) {
            JOptionPane.showMessageDialog(this, "Lote no encontrado.");
            return;
        }

        // Crear un JComboBox con los estados
        String[] estados = {"En Reposo", "Pasteurizada", "Lista para Envasar"};
        JComboBox<String> comboEstados = new JComboBox<>(estados);
        comboEstados.setSelectedItem(loteSeleccionado.getEstado()); // Estado actual seleccionado por defecto

        JPanel panel = new JPanel();
        panel.add(new JLabel("Seleccione el nuevo estado:"));
        panel.add(comboEstados);

        int resultado = JOptionPane.showConfirmDialog(this, panel, "Cambiar Estado", JOptionPane.OK_CANCEL_OPTION);
        if (resultado != JOptionPane.OK_OPTION) {
            JOptionPane.showMessageDialog(this, "Cambio de estado cancelado.");
            return;
        }

        String nuevoEstado = (String) comboEstados.getSelectedItem();
        if (nuevoEstado.equals(loteSeleccionado.getEstado())) {
            JOptionPane.showMessageDialog(this, "El lote ya está en el estado: " + nuevoEstado);
            return;
        }

        // Actualizar el estado del lote
        loteSeleccionado.setEstado(nuevoEstado);
        JOptionPane.showMessageDialog(this, "Estado del lote actualizado a: " + nuevoEstado);

        // Si el estado es "Lista para Envasar", crear ProductoFinal
        if (nuevoEstado.equals("Lista para Envasar")) {
            ProductoFinal producto = new ProductoFinal(
                "PF" + loteSeleccionado.getIdLote(), // SKU
                "Miel de " + loteSeleccionado.getFloracion(), // Descripción
                loteSeleccionado.getIdLote(), // Lote Asociado
                loteSeleccionado.getIdLote(), // ID Lote
                (int) loteSeleccionado.getCantKg() // Stock (1 kg = 1 unidad)
            );
            /*
            gestor.productosFinales.add(producto);
            gestor.inventarioLotes.remove(loteSeleccionado);

            // Actualizar la pestaña Productos Finales
            StringBuilder mostrarProductos = new StringBuilder("""
                PRODUCTOS FINALES:
                SKU - DESCRIPCIÓN - LOTE ASOCIADO - ID LOTE - STOCK\n
                """);
            for (ProductoFinal prod : gestor.productosFinales) {
                mostrarProductos.append(prod.getSku()).append(" - ")
                               .append(prod.getDescripcion()).append(" - ")
                               .append(prod.getLoteAsociado()).append(" - ")
                               .append(prod.getIdLote()).append(" - ")
                               .append(prod.getStock()).append("\n");
            }
            txtaResultadosProductosFinales.setText(mostrarProductos.toString());

            JOptionPane.showMessageDialog(this, "Lote transformado en producto final.");
            */
        }
          
    }//GEN-LAST:event_btnTransformarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazRokefeli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazRokefeli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazRokefeli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazRokefeli.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new InterfazRokefeli().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBusqueda;
    private javax.swing.JButton btnIngresarMateriaPrima;
    private javax.swing.JButton btnMostrarTotales;
    private javax.swing.JButton btnTransformar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea txtaResultadosMateriaPrima;
    // End of variables declaration//GEN-END:variables
}
